{"mappings":"YAMAA,UAAU,mBAAoB,CAC5BC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAA,SAAQC,GACNC,QAAQC,IAAIF,EAAc,OAM9B,IAAMG,EAAO,CACXC,YAAaC,SAASC,cAAc,sBACpCC,WAAYF,SAASC,cAAc,oBACnCE,QAASH,SAASC,cAAc,mBAChCG,SAAUJ,SAASC,cAAc,oBACjCI,WAAYL,SAASC,cAAc,sBACnCK,WAAYN,SAASC,cAAc,uBAqCrC,SAASM,EAAIC,GACT,OAAOC,OAAOD,GAAOE,SAAS,EAAG,KArBpCZ,EAAKI,WAAWS,iBAAiB,SAAS,WACvC,IAAMC,EAAY,IAAIpB,KAAKM,EAAKI,WAAWM,OAAOK,UAElD,GADAjB,QAAQC,IAAIe,GACRA,EAAYpB,KAAKsB,MAGnB,OAFAhB,EAAKC,YAAYgB,aAAa,WAAY,IAEnCC,MAAM,sCAEblB,EAAKC,YAAYkB,gBAAgB,eAgBvCnB,EAAKC,YAAYY,iBAAiB,SAAS,WACzC,IAAMC,EAAY,IAAIpB,KAAKM,EAAKI,WAAWM,OAAOK,UAClDf,EAAKI,WAAWa,aAAa,WAAY,IACnCjB,EAAKC,YAAYgB,aAAa,WAAY,IAChD,IAAMG,EAAaC,aAAY,WAC7B,GAAIP,EAAYpB,KAAKsB,MAAO,CAC1B,IAAwCM,EAa9C,SAAmBC,GAEjB,IAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAGNE,EAAOnB,EAAIoB,KAAKC,MAAMP,EAAKI,IAE3BI,EAAQtB,EAAIoB,KAAKC,MAAMP,EAAMI,EAAOD,IAEpCM,EAAUvB,EAAIoB,KAAKC,MAAMP,EAAOI,EAAOD,EAAQD,IAE/CQ,EAAUxB,EAAIoB,KAAKC,MAAMP,EAAQI,EAAOD,EAAQD,EAAUD,IAEhE,MAAO,CAAEI,OAAMG,QAAOC,UAASC,WA7BaC,CAAUpB,EAAYpB,KAAKsB,OAA5DY,EAAiCN,EAAjCM,KAAMG,EAA2BT,EAA3BS,MAAOC,EAAoBV,EAApBU,QAASC,EAAWX,EAAXW,QAC3BnC,QAAQC,IAAI,GAAWoC,OAARP,EAAK,KAAYO,OAATJ,EAAM,KAAcI,OAAXH,EAAQ,KAAWG,OAARF,IA+BnD,SAAqBL,EAAMG,EAAOC,EAASC,GACvCjC,EAAKK,QAAQ+B,YAAa,GAAQD,OAALP,GAC/B5B,EAAKM,SAAS8B,YAAc,GAASD,OAANJ,GAC/B/B,EAAKO,WAAW6B,YAAc,GAAWD,OAARH,GACjChC,EAAKQ,WAAW4B,YAAe,GAAWD,OAARF,GAlC5BI,CAAY,CAAET,OAAMG,QAAOC,UAASC,iBAGxCK,cAAclB,KAEf,Q","sources":["src/js/02-timer.js"],"sourcesContent":["// const flatpickr = require('flatpickr');\n// import 'flatpickr/dist/flatpickr.min.css';\n// import flatpickr from 'flatpickr';\n\n\n\nflatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n  },\n});\n\n// console.log(selectedDates[0]);\n\nconst refs = {\n  startButton: document.querySelector('button[data-start]'),\n  inputClick: document.querySelector('#datetime-picker'),\n  divDays: document.querySelector('span[data-days]'),\n  divHours: document.querySelector('span[data-hours]'),\n  divMinutes: document.querySelector('span[data-minutes]'),\n  divSeconds: document.querySelector('span[data-seconds]'),\n};\n\n\n\n// const startTime = refs.inputClick.addEventListener('input', () => console.log(new Date(refs.inputClick.value).getTime()) )\n// console.log(startTime);\n// let currentTime = Date.now();\n// console.dir(refs.divField);\n\n\n// console.log(startTime);\n\n\n\n\n\n refs.inputClick.addEventListener('input', () => {\n    const startTime = new Date(refs.inputClick.value).getTime();\n    console.log(startTime);\n    if (startTime < Date.now()) {\n      refs.startButton.setAttribute('disabled', '');\n\n      return alert('Please choose a date in the future');\n    } else {\n      refs.startButton.removeAttribute('disabled');\n      //   const timer = {\n      // start() {\n      // convertMs();\n      \n      // },\n      //   };\n      //   timer.start();\n    }\n});\n// \n// console.log(x);\nfunction pad(value) {\n    return String(value).padStart(2, '0');\n}\n\nrefs.startButton.addEventListener('click', ()=>{\n  const startTime = new Date(refs.inputClick.value).getTime();\n  refs.inputClick.setAttribute('disabled', '')\n        refs.startButton.setAttribute('disabled', '')\n  const intervalId = setInterval(() => {\n    if (startTime > Date.now()) {\n      const {days, hours, minutes, seconds} = convertMs(startTime - Date.now());\n        console.log(`${days}:${hours}:${minutes}:${seconds}`);\n        updateTimer({ days, hours, minutes, seconds });\n        \n  } else {\n    clearInterval(intervalId);\n  }\n}, 1000)\n}\n);\n\n\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = pad(Math.floor(ms / day));\n  // Remaining hours\n  const hours = pad(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = pad(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = pad(Math.floor((((ms % day) % hour) % minute) / second));\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer(days, hours, minutes, seconds) {\n    refs.divDays.textContent =`${days}`,\n  refs.divHours.textContent = `${hours}`,\n  refs.divMinutes.textContent = `${minutes}`,\n  refs.divSeconds.textContent =  `${seconds}`\n    // refs.divField.textContent = `${days}:${hours}:${minutes}:${seconds}`;\n}\n\n// alert('Please choose a date in the future');\n// console.log(convertMs(16000000));\n\n\n\n// function y() {\n//     if (new Date(refs.inputClick.value).getTime() >= Date.now()) {\n//         timerId = setInterval(() => {\n//           const timeCur =\n//             new Date(refs.inputClick.value).getTime() - Date.now();\n//           console.log(timeCur);\n//         }, 1000);\n//     }\n//     // else {\n//     //     clearInterval(timerId);\n//     // }\n// }\n\n// // function z() {\n// //     timerId = setInterval(() => {\n// //         if (new Date(refs.inputClick.value).getTime() >= Date.now()) {\n// //             const timeCur = new Date(refs.inputClick.value).getTime() - Date.now();\n// //             // console.log(timeCur);\n// //         }\n// //     }, 1000)\n// //      else {\n// //         clearInterval(timerId);\n// //     }\n// //     }\n\n \n \n\n\n\n\n\n\n\n\n\n"],"names":["flatpickr","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","console","log","$84b9dae4df53835d$var$refs","startButton","document","querySelector","inputClick","divDays","divHours","divMinutes","divSeconds","$84b9dae4df53835d$var$pad","value","String","padStart","addEventListener","startTime","getTime","now","setAttribute","alert","removeAttribute","intervalId","setInterval","ref","ms","second","minute","hour","day","days","Math","floor","hours","minutes","seconds","$84b9dae4df53835d$var$convertMs","concat","textContent","$84b9dae4df53835d$var$updateTimer","clearInterval"],"version":3,"file":"02-timer.68fdcaf9.js.map"}